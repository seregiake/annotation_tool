{"ast":null,"code":"var _jsxFileName = \"/Users/serenagiachetti/Desktop/projects/annotation_tool/frontend/src/containers/AnnotationView.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport BackgroundCanvas from '../components/BackgroundCanvas';\nimport ColorCanvas from '../components/ColorCanvas';\nimport OutlineCanvas from '../components/OutlineCanvas';\nimport MaskSection from '../components/MaskSection';\nimport { Col, Row } from \"react-bootstrap\";\nimport { Button, Form, Input } from \"antd\";\nimport AnnotationSection from \"../components/AnnotationSection\";\n\nclass AnnotationView extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      item: [],\n      mask: [],\n      task: [],\n      annotation: [],\n      imageID: this.props.match.params.imageID,\n      taskID: this.props.match.params.taskID\n    };\n\n    this.fetchImage = () => {\n      this.setState({\n        imageID: this.props.match.params.imageID,\n        taskID: this.props.match.params.taskID\n      });\n      axios.get(\"http://127.0.0.1:5000/image/\" + this.state.imageID).then(res => {\n        this.setState({\n          item: res.data\n        }); // console.log(this.state);\n      });\n      axios.get(\"http://127.0.0.1:5000/tasks/\" + this.state.taskID).then(res => {\n        this.setState({\n          task: res.data\n        }); // console.log(this.state);\n\n        const user_id = 1;\n        axios.get(\"http://127.0.0.1:5000/masks/\" + user_id + \"/\" + this.state.imageID + \"/\" + this.state.task.super_id).then(res => {\n          this.setState({\n            mask: res.data\n          });\n          console.log(this.state);\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchImage();\n    console.log(this.state);\n  }\n\n  setMaskSection(imageID, task, mask) {\n    if (typeof mask === 'string') {\n      return React.createElement(MaskSection, {\n        requestType: \"POST\",\n        imageID: imageID,\n        superID: task.super_id,\n        mask: mask,\n        btnText: \"Create\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(MaskSection, {\n        requestType: \"PUT\",\n        imageID: imageID,\n        superID: task.super_id,\n        mask: mask,\n        btnText: \"Update\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      });\n    }\n  }\n\n  displayMask(mask, item) {\n    if (mask.length === 0) {\n      return;\n    } else {\n      return React.createElement(OutlineCanvas, {\n        size: item.size,\n        boundaries: mask.boundaries,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      });\n    }\n  }\n\n  render() {\n    const {\n      item,\n      mask,\n      task,\n      imageID\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"canvases_div\",\n      style: {\n        position: 'relative',\n        minHeight: '300px',\n        background: 'yellow'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(BackgroundCanvas, {\n      image: item,\n      size: item.size,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(ColorCanvas, {\n      size: item.size,\n      mask: mask.mask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), this.displayMask(mask, item)), React.createElement(\"div\", {\n      style: {\n        paddingTop: 20,\n        minHeight: '800px',\n        color: 'rgb(25, 25, 112)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.setMaskSection(imageID, task, mask), React.createElement(\"div\", {\n      style: {\n        position: 'relative',\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Col, {\n      style: {\n        position: 'absolute',\n        marginTop: 20,\n        marginBottom: 20,\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"\\u2699 Mask Settings \\u2699\"), React.createElement(Form, {\n      onSubmit: event => this.handleSubmit(event, this.props.requestType, this.props.imageID),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Kernel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Input, {\n      id: \"kernel\",\n      type: \"number\",\n      min: 0,\n      defaultValue: mask.kernel,\n      \"data-toggle\": \"tooltip\",\n      \"data-placement\": \"bottom\",\n      style: {\n        width: '50%'\n      },\n      title: \"Kernel: Width of Gaussian kernel used in smoothing the sample density. Higher means fewer clusters.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }))), \" \", React.createElement(Col, {\n      xs: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Max-dist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Input, {\n      id: \"dist\",\n      type: \"number\",\n      min: 0,\n      defaultValue: mask.dist,\n      \"data-toggle\": \"tooltip\",\n      \"data-placement\": \"bottom\",\n      style: {\n        width: '50%'\n      },\n      title: \"Max-dist: Cut-off point for data distances. Higher means fewer clusters.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }))), \" \", React.createElement(Col, {\n      xs: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Ratio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Input, {\n      id: \"ratio\",\n      type: \"number\",\n      min: 0,\n      step: 0.1,\n      precision: 1,\n      max: 1,\n      defaultValue: mask.ratio,\n      \"data-toggle\": \"tooltip\",\n      \"data-placement\": \"bottom\",\n      style: {\n        width: '50%'\n      },\n      title: \"Ratio: (between 0 and 1). Balances color-space proximity and image-space proximity. Higher values give more weight to color-space.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(Button, {\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, this.props.btnText), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        border: '2px dotted rgb(25, 25, 112)',\n        padding: 20,\n        background: 'rgba(112, 112, 136, 0.2)',\n        color: 'rgb(25, 25, 112)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"\\u2042 Mask Color & Opacity \\u2042\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"opacity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Opacity:\"), React.createElement(\"datalist\", {\n      id: \"rate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"40\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"50\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"60\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"70\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"80\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"90\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"range\",\n      id: \"opacity\",\n      className: \"form-control-range\",\n      min: \"0\",\n      max: \"100\",\n      step: \"10\",\n      list: \"rate\",\n      onChange: changeOpacity(this.id, 'mask_op_value'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"mask_op_value\",\n      disabled: true,\n      value: \"50%\",\n      size: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"mask_color\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Color:\"), React.createElement(\"input\", {\n      type: \"color\",\n      id: \"mask_color\",\n      defaultValue: \"#000000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      href: \"#\",\n      onClick: redrawMask(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Display Mask\"))), React.createElement(AnnotationSection, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default AnnotationView;\n/*\n<BackgroundCanvas image={item} size={item.size} />\n                        <ColorCanvas size={item.size} />\n \n                        { this.displayMask(mask, item) }\n\n<ColorCanvas style={{ zIndex: 2, position:'absolute' }} size={item.size} />\n<OutlineCanvas style={{ zIndex: 3, position:'absolute' }} size={item.size} />\n                     \n*/\n// <img src={item.url} alt={item.name} draggable=\"false\" />","map":{"version":3,"sources":["/Users/serenagiachetti/Desktop/projects/annotation_tool/frontend/src/containers/AnnotationView.js"],"names":["React","Component","axios","BackgroundCanvas","ColorCanvas","OutlineCanvas","MaskSection","Col","Row","Button","Form","Input","AnnotationSection","AnnotationView","state","item","mask","task","annotation","imageID","props","match","params","taskID","fetchImage","setState","get","then","res","data","user_id","super_id","console","log","componentDidMount","setMaskSection","displayMask","length","size","boundaries","render","position","minHeight","background","paddingTop","color","width","height","marginTop","marginBottom","event","handleSubmit","requestType","kernel","dist","ratio","btnText","border","padding","changeOpacity","id","redrawMask"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,iBAAvB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,KAAtB,QAAkC,MAAlC;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;;AAGA,MAAMC,cAAN,SAA6BZ,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEnCa,KAFmC,GAE3B;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,IAAI,EAAE,EAFF;AAGJC,MAAAA,IAAI,EAAE,EAHF;AAIJC,MAAAA,UAAU,EAAE,EAJR;AAKJC,MAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,OAL7B;AAMJI,MAAAA,MAAM,EAAE,KAAKH,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC;AAN5B,KAF2B;;AAAA,SAWnCC,UAXmC,GAWtB,MAAM;AACf,WAAKC,QAAL,CAAc;AACVN,QAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,OADvB;AAEVI,QAAAA,MAAM,EAAE,KAAKH,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC;AAFtB,OAAd;AAIArB,MAAAA,KAAK,CAACwB,GAAN,CAAU,iCAAiC,KAAKZ,KAAL,CAAWK,OAAtD,EAA+DQ,IAA/D,CAAoEC,GAAG,IAAI;AACzE,aAAKH,QAAL,CAAc;AACZV,UAAAA,IAAI,EAAEa,GAAG,CAACC;AADE,SAAd,EADyE,CAI3E;AACC,OALD;AAMA3B,MAAAA,KAAK,CAACwB,GAAN,CAAU,iCAAiC,KAAKZ,KAAL,CAAWS,MAAtD,EAA8DI,IAA9D,CAAmEC,GAAG,IAAI;AACxE,aAAKH,QAAL,CAAc;AACZR,UAAAA,IAAI,EAAEW,GAAG,CAACC;AADE,SAAd,EADwE,CAI1E;;AACA,cAAMC,OAAO,GAAG,CAAhB;AACA5B,QAAAA,KAAK,CAACwB,GAAN,CAAU,iCAAiCI,OAAjC,GAA2C,GAA3C,GAAiD,KAAKhB,KAAL,CAAWK,OAA5D,GAAsE,GAAtE,GAA4E,KAAKL,KAAL,CAAWG,IAAX,CAAgBc,QAAtG,EAAgHJ,IAAhH,CAAqHC,GAAG,IAAI;AACxH,eAAKH,QAAL,CAAc;AACVT,YAAAA,IAAI,EAAEY,GAAG,CAACC;AADA,WAAd;AAGAG,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAjB;AACC,SALL;AAMC,OAZD;AAcH,KApCkC;AAAA;;AAuCnCoB,EAAAA,iBAAiB,GAAG;AAChB,SAAKV,UAAL;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAjB;AACH;;AAGDqB,EAAAA,cAAc,CAAChB,OAAD,EAAUF,IAAV,EAAgBD,IAAhB,EAAqB;AAC/B,QAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC1B,aAAO,oBAAC,WAAD;AACP,QAAA,WAAW,EAAC,MADL;AAEP,QAAA,OAAO,EAAGG,OAFH;AAGP,QAAA,OAAO,EAAGF,IAAI,CAACc,QAHR;AAIP,QAAA,IAAI,EAAKf,IAJF;AAKP,QAAA,OAAO,EAAC,QALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAOH,KARD,MAQO;AACH,aAAO,oBAAC,WAAD;AACP,QAAA,WAAW,EAAC,KADL;AAEP,QAAA,OAAO,EAAGG,OAFH;AAGP,QAAA,OAAO,EAAGF,IAAI,CAACc,QAHR;AAIP,QAAA,IAAI,EAAKf,IAJF;AAKP,QAAA,OAAO,EAAC,QALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAOH;AACJ;;AAEDoB,EAAAA,WAAW,CAACpB,IAAD,EAAOD,IAAP,EAAY;AACnB,QAAGC,IAAI,CAACqB,MAAL,KAAgB,CAAnB,EAAqB;AACjB;AAEH,KAHD,MAGO;AAEH,aAAO,oBAAC,aAAD;AACH,QAAA,IAAI,EAAEtB,IAAI,CAACuB,IADR;AAEH,QAAA,UAAU,EAAEtB,IAAI,CAACuB,UAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAKH;AACJ;;AAGDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEzB,MAAAA,IAAF;AAAQC,MAAAA,IAAR;AAAcC,MAAAA,IAAd;AAAoBE,MAAAA;AAApB,QAAgC,KAAKL,KAA3C;AACA,WACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,EAAE,EAAC,cAAR;AAAuB,MAAA,KAAK,EAAE;AAAE2B,QAAAA,QAAQ,EAAC,UAAX;AAAuBC,QAAAA,SAAS,EAAC,OAAjC;AAA0CC,QAAAA,UAAU,EAAC;AAArD,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAE5B,IAAzB;AAA+B,MAAA,IAAI,EAAEA,IAAI,CAACuB,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAEvB,IAAI,CAACuB,IAAxB;AAA8B,MAAA,IAAI,EAAEtB,IAAI,CAACA,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGM,KAAKoB,WAAL,CAAiBpB,IAAjB,EAAuBD,IAAvB,CAHN,CADJ,EAOI;AAAK,MAAA,KAAK,EAAE;AAAE6B,QAAAA,UAAU,EAAC,EAAb;AAAiBF,QAAAA,SAAS,EAAC,OAA3B;AAAoCG,QAAAA,KAAK,EAAC;AAA1C,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKV,cAAL,CAAoBhB,OAApB,EAA6BF,IAA7B,EAAmCD,IAAnC,CADN,EAGI;AAAK,MAAA,KAAK,EAAE;AAAEyB,QAAAA,QAAQ,EAAC,UAAX;AAAuBK,QAAAA,KAAK,EAAC,MAA7B;AAAqCC,QAAAA,MAAM,EAAC;AAA5C,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAAEN,QAAAA,QAAQ,EAAC,UAAX;AAAuBO,QAAAA,SAAS,EAAC,EAAjC;AAAqCC,QAAAA,YAAY,EAAC,EAAlD;AAAsDH,QAAAA,KAAK,EAAC;AAA5D,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADJ,EAEI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAGI,KAAD,IAAW,KAAKC,YAAL,CACvBD,KADuB,EAEvB,KAAK9B,KAAL,CAAWgC,WAFY,EAGvB,KAAKhC,KAAL,CAAWD,OAHY,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,EAAE,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,EAAE,EAAC,QAAV;AAAmB,MAAA,IAAI,EAAC,QAAxB;AAAiC,MAAA,GAAG,EAAE,CAAtC;AAAyC,MAAA,YAAY,EAAEH,IAAI,CAACqC,MAA5D;AACQ,qBAAY,SADpB;AAC8B,wBAAe,QAD7C;AACsD,MAAA,KAAK,EAAE;AAAEP,QAAAA,KAAK,EAAC;AAAR,OAD7D;AAEQ,MAAA,KAAK,EAAC,qGAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADA,CADJ,OAOW,oBAAC,GAAD;AAAK,MAAA,EAAE,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACP,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,EAAE,EAAC,MAAV;AAAiB,MAAA,IAAI,EAAC,QAAtB;AAA+B,MAAA,GAAG,EAAE,CAApC;AAAuC,MAAA,YAAY,EAAE9B,IAAI,CAACsC,IAA1D;AACQ,qBAAY,SADpB;AAC8B,wBAAe,QAD7C;AACsD,MAAA,KAAK,EAAE;AAAER,QAAAA,KAAK,EAAC;AAAR,OAD7D;AAEQ,MAAA,KAAK,EAAC,0EAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADO,CAPX,OAaW,oBAAC,GAAD;AAAK,MAAA,EAAE,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACP,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,EAAE,EAAC,OAAV;AAAkB,MAAA,IAAI,EAAC,QAAvB;AAAgC,MAAA,GAAG,EAAE,CAArC;AAAwC,MAAA,IAAI,EAAE,GAA9C;AAAmD,MAAA,SAAS,EAAE,CAA9D;AAAiE,MAAA,GAAG,EAAE,CAAtE;AAAyE,MAAA,YAAY,EAAE9B,IAAI,CAACuC,KAA5F;AACQ,qBAAY,SADpB;AAC8B,wBAAe,QAD7C;AACsD,MAAA,KAAK,EAAE;AAAET,QAAAA,KAAK,EAAC;AAAR,OAD7D;AAEQ,MAAA,KAAK,EAAC,oIAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADO,CAbX,CAJA,EA0BI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B,KAAK1B,KAAL,CAAWoC,OAAvC,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CA1BJ,CAFJ,EAkCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlCJ,EAkCU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlCV,EAmCI;AAAK,MAAA,KAAK,EAAE;AAAEV,QAAAA,KAAK,EAAC,MAAR;AAAgBW,QAAAA,MAAM,EAAC,6BAAvB;AAAsDC,QAAAA,OAAO,EAAC,EAA9D;AAAkEf,QAAAA,UAAU,EAAC,0BAA7E;AAAyGE,QAAAA,KAAK,EAAC;AAA/G,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAO,MAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,EAEI;AAAU,MAAA,EAAE,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAQ,MAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAQ,MAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII;AAAQ,MAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI;AAAQ,MAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAMI;AAAQ,MAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAOI;AAAQ,MAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,EAQI;AAAQ,MAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,EASI;AAAQ,MAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,EAUI;AAAQ,MAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,EAWI;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,CAFJ,EAeI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,EAAE,EAAC,SAAvB;AACI,MAAA,SAAS,EAAC,oBADd;AACmC,MAAA,GAAG,EAAC,GADvC;AAC2C,MAAA,GAAG,EAAC,KAD/C;AACqD,MAAA,IAAI,EAAC,IAD1D;AAEI,MAAA,IAAI,EAAC,MAFT;AAEgB,MAAA,QAAQ,EAAEc,aAAa,CAAC,KAAKC,EAAN,EAAU,eAAV,CAFvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAfJ,EAoBI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,eAAtB;AAAsC,MAAA,QAAQ,MAA9C;AAA+C,MAAA,KAAK,EAAC,KAArD;AAA2D,MAAA,IAAI,EAAC,GAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CApBJ,EAuBI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,EAAE,EAAC,YAAvB;AAAoC,MAAA,YAAY,EAAC,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAvBJ,CADA,EA6BA;AAAQ,MAAA,IAAI,EAAC,GAAb;AAAiB,MAAA,OAAO,EAAEC,UAAU,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA7BA,CAHA,CAnCJ,EAsEI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtEJ,CADJ,CAHJ,CAPJ,CADR;AA2FH;;AA7KkC;;AAgLvC,eAAehD,cAAf;AAGA;;;;;;;;;;AAUA","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport BackgroundCanvas from '../components/BackgroundCanvas';\nimport ColorCanvas from '../components/ColorCanvas';\nimport OutlineCanvas from '../components/OutlineCanvas';\nimport MaskSection from '../components/MaskSection';\nimport {Col, Row} from \"react-bootstrap\";\nimport {Button, Form, Input} from \"antd\";\nimport AnnotationSection from \"../components/AnnotationSection\";\n\n\nclass AnnotationView extends Component {\n\n    state = {\n        item: [],\n        mask: [],\n        task: [],\n        annotation: [],\n        imageID: this.props.match.params.imageID,\n        taskID: this.props.match.params.taskID\n    };\n\n    fetchImage = () => {\n        this.setState({\n            imageID: this.props.match.params.imageID,\n            taskID: this.props.match.params.taskID\n        });\n        axios.get(\"http://127.0.0.1:5000/image/\" + this.state.imageID).then(res => {\n          this.setState({\n            item: res.data\n        });\n        // console.log(this.state);\n        });\n        axios.get(\"http://127.0.0.1:5000/tasks/\" + this.state.taskID).then(res => {\n          this.setState({\n            task: res.data\n        });\n        // console.log(this.state);\n        const user_id = 1;\n        axios.get(\"http://127.0.0.1:5000/masks/\" + user_id + \"/\" + this.state.imageID + \"/\" + this.state.task.super_id).then(res => {\n            this.setState({\n                mask: res.data\n            });\n            console.log(this.state);\n            });\n        });\n        \n    }\n\n\n    componentDidMount() {\n        this.fetchImage();\n        console.log(this.state);\n    }\n\n\n    setMaskSection(imageID, task, mask){\n        if( typeof mask === 'string' ){\n            return <MaskSection\n            requestType=\"POST\"\n            imageID={ imageID }\n            superID={ task.super_id }\n            mask = { mask }\n            btnText=\"Create\" />\n\n        } else {\n            return <MaskSection\n            requestType=\"PUT\"\n            imageID={ imageID }\n            superID={ task.super_id }\n            mask = { mask }\n            btnText=\"Update\" />\n\n        }\n    }\n\n    displayMask(mask, item){\n        if(mask.length === 0){\n            return\n\n        } else {\n\n            return <OutlineCanvas\n                size={item.size}\n                boundaries={mask.boundaries}\n            />\n\n        }\n    }\n\n    \n    render() {\n        const { item, mask, task, imageID } = this.state;\n        return(\n                <div >\n                    <div id=\"canvases_div\" style={{ position:'relative', minHeight:'300px', background:'yellow' }}>\n                        <BackgroundCanvas image={item} size={item.size} />\n                        <ColorCanvas size={item.size} mask={mask.mask} />\n                        { this.displayMask(mask, item) }\n\n                    </div>\n                    <div style={{ paddingTop:20, minHeight:'800px', color:'rgb(25, 25, 112)' }}>\n                        { this.setMaskSection(imageID, task, mask) }\n\n                        <div style={{ position:'relative', width:'100%', height:'100%' }}>\n                            <Col style={{ position:'absolute', marginTop:20, marginBottom:20, width:'100%' }}>\n                                <h3>&#9881; Mask Settings &#9881;</h3>\n                                <Form onSubmit={(event) => this.handleSubmit(\n                                    event,\n                                    this.props.requestType,\n                                    this.props.imageID )} >\n                                <Row>\n                                    <Col xs >\n                                    <Form.Item label=\"Kernel\" >\n                                        <Input id=\"kernel\" type=\"number\" min={0} defaultValue={mask.kernel}\n                                                data-toggle=\"tooltip\" data-placement=\"bottom\" style={{ width:'50%'}}\n                                                title=\"Kernel: Width of Gaussian kernel used in smoothing the sample density. Higher means fewer clusters.\" />\n                                    </Form.Item>\n                                    </Col> <Col xs >\n                                    <Form.Item label=\"Max-dist\">\n                                        <Input id=\"dist\" type=\"number\" min={0} defaultValue={mask.dist}\n                                                data-toggle=\"tooltip\" data-placement=\"bottom\" style={{ width:'50%'}}\n                                                title=\"Max-dist: Cut-off point for data distances. Higher means fewer clusters.\" />\n                                    </Form.Item>\n                                    </Col> <Col xs >\n                                    <Form.Item label=\"Ratio\">\n                                        <Input id=\"ratio\" type=\"number\" min={0} step={0.1} precision={1} max={1} defaultValue={mask.ratio}\n                                                data-toggle=\"tooltip\" data-placement=\"bottom\" style={{ width:'50%'}}\n                                                title=\"Ratio: (between 0 and 1). Balances color-space proximity and image-space proximity. Higher values give more weight to color-space.\" />\n                                    </Form.Item>\n                                    </Col>\n                                </Row>\n\n                                    <Form.Item >\n                                        <br />\n                                        <Button htmlType=\"submit\" >{this.props.btnText}</Button>\n                                        <br />\n                                    </Form.Item>\n                                </Form>\n                                <br /><br />\n                                <div style={{ width:'100%', border:'2px dotted rgb(25, 25, 112)', padding:20, background:'rgba(112, 112, 136, 0.2)', color:'rgb(25, 25, 112)'}}>\n                                <h5>&#8258; Mask Color &amp; Opacity &#8258;</h5>\n                                <br />\n                                <Col >\n                                <div className=\"form-row\" >\n                                <label htmlFor=\"opacity\">Opacity:</label>\n                                    <datalist id=\"rate\">\n                                        <option value=\"0\"></option>\n                                        <option value=\"10\"></option>\n                                        <option value=\"20\"></option>\n                                        <option value=\"30\"></option>\n                                        <option value=\"40\"></option>\n                                        <option value=\"50\"></option>\n                                        <option value=\"60\"></option>\n                                        <option value=\"70\"></option>\n                                        <option value=\"80\"></option>\n                                        <option value=\"90\"></option>\n                                        <option value=\"100\"></option>\n                                    </datalist>\n                                    <div className=\"col-9\">\n                                        <input type=\"range\" id=\"opacity\"\n                                            className=\"form-control-range\" min=\"0\" max=\"100\" step=\"10\"\n                                            list=\"rate\" onChange={changeOpacity(this.id, 'mask_op_value')} />\n                                    </div>\n                                    <div className=\"col\">\n                                        <input type=\"text\" id=\"mask_op_value\" disabled value=\"50%\" size=\"4\" />\n                                    </div>\n                                    <div className=\"col\">\n                                        <label htmlFor=\"mask_color\">Color:</label>\n                                        <input type=\"color\" id=\"mask_color\" defaultValue=\"#000000\" />\n                                    </div>\n                                </div>\n                                <button href=\"#\" onClick={redrawMask()} >Display Mask</button>\n                                </Col>\n                                </div>\n                                <AnnotationSection />\n                            </Col>\n                        </div>\n                    </div> \n                </div>\n    \n           \n        )\n        \n    }\n    \n}\nexport default AnnotationView;\n\n\n/*\n<BackgroundCanvas image={item} size={item.size} />\n                        <ColorCanvas size={item.size} />\n \n                        { this.displayMask(mask, item) }\n\n<ColorCanvas style={{ zIndex: 2, position:'absolute' }} size={item.size} />\n<OutlineCanvas style={{ zIndex: 3, position:'absolute' }} size={item.size} />\n                     \n*/\n// <img src={item.url} alt={item.name} draggable=\"false\" />\n"]},"metadata":{},"sourceType":"module"}