{"ast":null,"code":"var _jsxFileName = \"/Users/serenagiachetti/Desktop/projects/annotation_tool/frontend/src/containers/AnnotationView.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport BackgroundCanvas from '../components/BackgroundCanvas';\nimport ColorCanvas from '../components/ColorCanvas';\nimport OutlineCanvas from '../components/OutlineCanvas';\nimport MaskSection from '../components/MaskSection';\n\nclass AnnotationView extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      item: [],\n      mask: [],\n      task: [],\n      annotation: [],\n      imageID: this.props.match.params.imageID,\n      taskID: this.props.match.params.taskID\n    };\n\n    this.fetchImage = () => {\n      this.setState({\n        imageID: this.props.match.params.imageID,\n        taskID: this.props.match.params.taskID\n      });\n      axios.get(\"http://127.0.0.1:5000/image/\" + this.state.imageID).then(res => {\n        this.setState({\n          item: res.data\n        }); // console.log(this.state);\n      });\n      axios.get(\"http://127.0.0.1:5000/tasks/\" + this.state.taskID).then(res => {\n        this.setState({\n          task: res.data\n        }); // console.log(this.state);\n\n        const user_id = 1;\n        axios.get(\"http://127.0.0.1:5000/masks/\" + user_id + \"/\" + this.state.imageID + \"/\" + this.state.task.super_id).then(res => {\n          this.setState({\n            mask: res.data\n          });\n          console.log(this.state);\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchImage();\n  }\n\n  createMask() {\n    console.log('create mask');\n  }\n\n  setMaskSection(imageID, task, mask) {\n    if (Array.isArray(mask)) {\n      return React.createElement(MaskSection, {\n        requestType: \"POST\",\n        imageID: imageID,\n        superID: task.super_id,\n        mask: mask,\n        btnText: \"Create\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(MaskSection, {\n        requestType: \"PUT\",\n        imageID: imageID,\n        superID: task.super_id,\n        mask: mask,\n        btnText: \"Update\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      });\n    }\n  }\n\n  render() {\n    const {\n      item,\n      mask,\n      task,\n      imageID\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"canvases_div\",\n      style: {\n        position: 'relative',\n        minHeight: '300px',\n        background: 'yellow'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(BackgroundCanvas, {\n      image: item,\n      size: item.size,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(ColorCanvas, {\n      size: item.size,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(OutlineCanvas, {\n      size: item.size,\n      mask: mask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        paddingTop: 20,\n        minHeight: '800px',\n        color: 'rgb(25, 25, 112)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.setMaskSection(imageID, task, mask)));\n  }\n\n}\n\nexport default AnnotationView;\n/*\n<BackgroundCanvas image={item} size={item.size} />\n                        <ColorCanvas size={item.size} />\n \n                        { this.displayMask(mask, item) }\n\n<ColorCanvas style={{ zIndex: 2, position:'absolute' }} size={item.size} />\n<OutlineCanvas style={{ zIndex: 3, position:'absolute' }} size={item.size} />\n                     \n*/\n// <img src={item.url} alt={item.name} draggable=\"false\" />","map":{"version":3,"sources":["/Users/serenagiachetti/Desktop/projects/annotation_tool/frontend/src/containers/AnnotationView.js"],"names":["React","Component","axios","BackgroundCanvas","ColorCanvas","OutlineCanvas","MaskSection","AnnotationView","state","item","mask","task","annotation","imageID","props","match","params","taskID","fetchImage","setState","get","then","res","data","user_id","super_id","console","log","componentDidMount","createMask","setMaskSection","Array","isArray","render","position","minHeight","background","size","paddingTop","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport BackgroundCanvas from '../components/BackgroundCanvas';\nimport ColorCanvas from '../components/ColorCanvas';\nimport OutlineCanvas from '../components/OutlineCanvas';\nimport MaskSection from '../components/MaskSection';\n\nclass AnnotationView extends Component {\n\n    state = {\n        item: [],\n        mask: [],\n        task: [],\n        annotation: [],\n        imageID: this.props.match.params.imageID,\n        taskID: this.props.match.params.taskID\n    };\n\n    fetchImage = () => {\n        this.setState({\n            imageID: this.props.match.params.imageID,\n            taskID: this.props.match.params.taskID\n        })\n        axios.get(\"http://127.0.0.1:5000/image/\" + this.state.imageID).then(res => {\n          this.setState({\n            item: res.data\n        });\n        // console.log(this.state);\n        });\n        axios.get(\"http://127.0.0.1:5000/tasks/\" + this.state.taskID).then(res => {\n          this.setState({\n            task: res.data\n        });\n        // console.log(this.state);\n        const user_id = 1;\n        axios.get(\"http://127.0.0.1:5000/masks/\" + user_id + \"/\" + this.state.imageID + \"/\" + this.state.task.super_id).then(res => {\n            this.setState({\n                mask: res.data\n            });\n            console.log(this.state);\n            });\n        });\n        \n    }\n\n\n    componentDidMount() {\n        this.fetchImage();\n    }\n\n    \n\n    createMask(){\n        console.log('create mask');\n        \n    }\n\n    setMaskSection(imageID, task, mask){\n        if(Array.isArray(mask)){\n            return <MaskSection\n            requestType=\"POST\"\n            imageID={imageID}\n            superID={task.super_id}\n            mask = {mask}\n            btnText=\"Create\" />\n\n        } else {\n\n            return <MaskSection\n            requestType=\"PUT\"\n            imageID={imageID}\n            superID={task.super_id}\n            mask = {mask}\n            btnText=\"Update\" />\n\n        }\n    }\n\n\n    \n    render() {\n        const { item, mask, task, imageID } = this.state;\n        return(\n                <div >\n                    <div id=\"canvases_div\" style={{ position:'relative', minHeight:'300px', background:'yellow',}}>\n                        <BackgroundCanvas image={item} size={item.size} />\n                        <ColorCanvas size={item.size} />\n                        <OutlineCanvas size={item.size} mask={mask} />\n                                   \n                           \n                    </div>\n                    <div style={{ paddingTop:20, minHeight:'800px', color:'rgb(25, 25, 112)' }}>\n                        {this.setMaskSection(imageID, task, mask)}\n                        \n                        \n                    </div> \n                </div>\n    \n           \n        )\n        \n    }\n    \n}\nexport default AnnotationView;\n\n\n/*\n<BackgroundCanvas image={item} size={item.size} />\n                        <ColorCanvas size={item.size} />\n \n                        { this.displayMask(mask, item) }\n\n<ColorCanvas style={{ zIndex: 2, position:'absolute' }} size={item.size} />\n<OutlineCanvas style={{ zIndex: 3, position:'absolute' }} size={item.size} />\n                     \n*/\n// <img src={item.url} alt={item.name} draggable=\"false\" />\n"]},"metadata":{},"sourceType":"module"}