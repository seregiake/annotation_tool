{"ast":null,"code":"var _jsxFileName = \"/Users/serenagiachetti/Desktop/projects/annotation_tool/frontend/src/components/OutlineCanvas.js\";\nimport React, { Component } from 'react';\n\nclass OutlineCanvas extends Component {\n  constructor(props) {\n    super(props); // this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.updateCanvas();\n  }\n\n  updateCanvas() {\n    const ctx = this.refs.canvas.getContext('2d');\n    ctx.fillRect(0, 0, 100, 100);\n  }\n\n  drawMask(boundaries, size) {\n    const canvas = this.refs.canvas;\n    const context = canvas.getContext('2d');\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    let outlineLayerData = context.createImageData(size[0], size[1]);\n    let outlineImage = outlineLayerData.data; // scroll the matrix with boundaries to create the outline image\n\n    let len = outlineLayerData.data.length; // console.log(len);\n\n    let col = 0,\n        row = 0;\n    let pixel = [];\n\n    for (let i = 0; i < len && row < size[1]; i += 4) {\n      pixel = boundaries[row][col]; // console.log(\"pixel: \" + pixel);\n\n      if (pixel[0] == \"0\") {\n        outlineImage[i] = boundaries[0]; // r\n\n        outlineImage[i + 1] = boundaries[1]; // g\n\n        outlineImage[i + 2] = boundaries[2]; // b\n\n        outlineImage[i + 3] = boundaries[3]; // a\n      }\n\n      if (col == size[0] - 1) {\n        row++;\n        col = 0;\n      } else {\n        col++;\n      }\n    } // draw the outline layer in the 3° canvas\n\n\n    context.putImageData(outlineLayerData, 0, 0);\n  }\n\n  render() {\n    if (this.props.boundaries !== \"Mask doesn't exist\" && this.props.size !== undefined) {\n      const {\n        boundaries,\n        size\n      } = this.props; //this.drawMask(boundaries, size, this.canvasRef );\n    }\n\n    return React.createElement(\"canvas\", {\n      id: \"outline\",\n      ref: \"canvas\",\n      style: {\n        zIndex: 3,\n        position: 'relative',\n        backgroundColor: 'rgba(0, 255, 0, 0.3 )'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Sorry, your browser doesn't support the <canvas> element.\");\n  }\n\n}\n\nexport default OutlineCanvas;","map":{"version":3,"sources":["/Users/serenagiachetti/Desktop/projects/annotation_tool/frontend/src/components/OutlineCanvas.js"],"names":["React","Component","OutlineCanvas","constructor","props","componentDidMount","updateCanvas","ctx","refs","canvas","getContext","fillRect","drawMask","boundaries","size","context","width","height","outlineLayerData","createImageData","outlineImage","data","len","length","col","row","pixel","i","putImageData","render","undefined","zIndex","position","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nclass OutlineCanvas extends Component {\n\n    constructor (props){\n        super(props);\n        // this.canvasRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.updateCanvas();\n    }\n    updateCanvas() {\n        const ctx = this.refs.canvas.getContext('2d');\n        ctx.fillRect(0,0, 100, 100);\n    }\n\n\n    drawMask(boundaries, size){\n        const canvas = this.refs.canvas;\n        const context = canvas.getContext('2d');\n        context.canvas.width = size[0];\n        context.canvas.height = size[1];\n\n        let outlineLayerData = context.createImageData(size[0], size[1]);\n        let outlineImage = outlineLayerData.data;\n\n        // scroll the matrix with boundaries to create the outline image\n        let len = outlineLayerData.data.length;\n        // console.log(len);\n        let col = 0, row = 0;\n        let pixel = [];\n        for (let i = 0; i < len && row < size[1]; i += 4 ){\n            pixel = boundaries[row][col];\n            // console.log(\"pixel: \" + pixel);\n            if (pixel[0] == \"0\"){\n                outlineImage[i] = boundaries[0];       // r\n                outlineImage[i + 1] = boundaries[1];   // g\n                outlineImage[i + 2] = boundaries[2];   // b\n                outlineImage[i + 3] = boundaries[3];   // a\n            }\n            if (col == size[0] - 1){\n                row ++;\n                col = 0;\n            } else {\n                col++;\n            }\n\n        }\n\n        // draw the outline layer in the 3° canvas\n        context.putImageData(outlineLayerData, 0, 0 );\n\n}\n\n   render() {\n\n    if (this.props.boundaries !== \"Mask doesn't exist\" && this.props.size !==undefined){\n        const { boundaries, size } = this.props;\n        //this.drawMask(boundaries, size, this.canvasRef );\n    } \n\n    return(\n        <canvas id=\"outline\" ref=\"canvas\" style={{ zIndex: 3, position:'relative', backgroundColor:'rgba(0, 255, 0, 0.3 )'}}>\n            Sorry, your browser doesn't support the &lt;canvas&gt; element.\n        </canvas>\n    )\n\n    \n    \n    \n    }\n    \n}\nexport default OutlineCanvas;\n"]},"metadata":{},"sourceType":"module"}